{"version":3,"sources":["assets/styles/Portfolio.module.scss","assets/styles/ShowcaseCard.module.scss","components/ImageLightbox.js","components/ShowcaseCard.js","utils/getImagePathArr.js","containers/Projects.js","pages/Portfolio.js","utils/cachedFetchHook.js"],"names":["module","exports","ImageLightbox","images","setLightboxOpen","React","useState","imageIndex","setImageIndex","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","enableZoom","ShowcaseCard","id","title","tags","link","desc","date","isLightboxOpen","Fragment","className","styles","showcaseCard","imgWrapper","onClick","top","width","src","alt","showcaseBody","href","target","rel","description","innerClassName","tooltip","placement","autohide","map","tag","badge","color","pill","defaultProps","getImagePathArr","imageName","extension","count","i","arr","push","Projects","useCachedFetch","config","API_ENDPOINT","CACHE_TOGGLE","loading","data","error","console","log","projectData","PRE_RENDERING","Loader","_","isEmpty","d","img","namePrefix","url","Portfolio","portfolioContainer","animationIn","animationInDelay","fluid","useCache","expiry","CACHE_EXPIRY_HOURS","initialState","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","fetchData","a","cached","localStorage","getItem","ts","Date","now","JSON","parse","removeItem","fetch","response","json","setItem","stringify","message"],"mappings":"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","file":"static/js/7.30b7ff76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolioContainer\":\"Portfolio_portfolioContainer__3x88g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showcaseCard\":\"ShowcaseCard_showcaseCard__OH4rX\",\"imgWrapper\":\"ShowcaseCard_imgWrapper__107kH\",\"badge\":\"ShowcaseCard_badge__2F2IR\",\"title\":\"ShowcaseCard_title__2VnuQ\",\"showcaseBody\":\"ShowcaseCard_showcaseBody__1FKWP\",\"description\":\"ShowcaseCard_description__1grIc\",\"tags\":\"ShowcaseCard_tags__1l5lu\",\"tooltip\":\"ShowcaseCard_tooltip__19Cvo\"};","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Lightbox from \"react-image-lightbox\";\r\n\r\nconst ImageLightbox = ({ images, setLightboxOpen }) => {\r\n  const [imageIndex, setImageIndex] = React.useState(0);\r\n\r\n  return (\r\n    <Lightbox\r\n      mainSrc={images[imageIndex]}\r\n      nextSrc={images[(imageIndex + 1) % images.length]}\r\n      prevSrc={images[(imageIndex + images.length - 1) % images.length]}\r\n      onCloseRequest={() => setLightboxOpen(false)}\r\n      onMovePrevRequest={() => setImageIndex((imageIndex + images.length - 1) % images.length)}\r\n      onMoveNextRequest={() => setImageIndex((imageIndex + 1) % images.length)}\r\n      enableZoom={false}\r\n    />\r\n  );\r\n};\r\n\r\nImageLightbox.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  setLightboxOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageLightbox;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Badge, Card, CardBody, CardImg, CardTitle, UncontrolledTooltip } from \"reactstrap\";\r\nimport styles from \"../assets/styles/ShowcaseCard.module.scss\";\r\nimport ImageLightbox from \"./ImageLightbox\";\r\n\r\nconst ShowcaseCard = ({ id, title, tags, images, link, desc, date }) => {\r\n  const [isLightboxOpen, setLightboxOpen] = React.useState(false);\r\n  return (\r\n    images &&\r\n    images.length > 0 && (\r\n      <React.Fragment>\r\n        <Card className={styles.showcaseCard}>\r\n          <div\r\n            className={styles.imgWrapper}\r\n            onClick={() => {\r\n              setLightboxOpen(true);\r\n            }}\r\n          >\r\n            <CardImg top width=\"100%\" src={images[0]} alt={title} />\r\n          </div>\r\n          <CardBody className={styles.showcaseBody}>\r\n            <CardTitle className={styles.title}>\r\n              {link ? (\r\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <h4>{title}</h4>\r\n                </a>\r\n              ) : (\r\n                <h4>{title}</h4>\r\n              )}\r\n            </CardTitle>\r\n            <div id={`desc-${id}`} className={styles.description}>\r\n              {desc}\r\n            </div>\r\n            <UncontrolledTooltip\r\n              innerClassName={styles.tooltip}\r\n              placement=\"bottom\"\r\n              target={`desc-${id}`}\r\n              autohide={false}\r\n            >\r\n              {desc}\r\n            </UncontrolledTooltip>\r\n            <div className={styles.tags}>\r\n              {tags &&\r\n                tags.map((tag) => (\r\n                  <Badge key={tag} className={styles.badge} color=\"light\" pill>\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        {isLightboxOpen && <ImageLightbox images={images} setLightboxOpen={setLightboxOpen} />}\r\n      </React.Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nShowcaseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  link: PropTypes.string,\r\n  desc: PropTypes.string,\r\n  date: PropTypes.string,\r\n};\r\n\r\nShowcaseCard.defaultProps = {\r\n  tags: [],\r\n  link: null,\r\n  desc: \"\",\r\n  date: \"\",\r\n};\r\n\r\nexport default ShowcaseCard;\r\n","const getImagePathArr = (imageName, extension, count) => {\r\n  let arr = [];\r\n  let i;\r\n  for (i = 1; i <= count; i++) {\r\n    arr.push(process.env.PUBLIC_URL + \"/img/\" + imageName + i + \".\" + extension);\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport default getImagePathArr;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport ShowcaseCard from \"../components/ShowcaseCard\";\r\nimport config from \"../config\";\r\nimport projectData from \"../data/projects.json\";\r\nimport { useCachedFetch } from \"../utils/cachedFetchHook\";\r\nimport getImagePathArr from \"../utils/getImagePathArr\";\r\n\r\nconst Projects = () => {\r\n  let { loading, data, error } = useCachedFetch(\r\n    `${config.API_ENDPOINT}/projects`,\r\n    config.CACHE_TOGGLE\r\n  );\r\n\r\n  if (error) {\r\n    console.log(error);\r\n    console.log(\"Loading static data as fallback...\");\r\n    data = projectData;\r\n  }\r\n\r\n  return (\r\n    <Row className=\"mt-3\">\r\n      {loading || config.PRE_RENDERING ? (\r\n        <Loader />\r\n      ) : !_.isEmpty(data) ? (\r\n        data.map((d) => (\r\n          <div key={d.id} className=\"project-showcase-col mb-4 mb-md-0\">\r\n            <ShowcaseCard\r\n              id={d.id}\r\n              title={d.title}\r\n              images={getImagePathArr(d.img.namePrefix, d.img.extension, d.img.count)}\r\n              tags={d.tags}\r\n              link={d.url}\r\n              date={d.date}\r\n              desc={d.desc}\r\n            />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Container } from \"reactstrap\";\r\nimport styles from \"../assets/styles/Portfolio.module.scss\";\r\nimport Projects from \"../containers/Projects\";\r\n\r\nconst Portfolio = () => (\r\n  <>\r\n    <Animated className={styles.portfolioContainer} animationIn=\"fadeIn\" animationInDelay={50}>\r\n      <Container fluid className=\"pad-top\">\r\n        <div className=\"section-title\">\r\n          <h2>Portfolio</h2>\r\n          <p>Explore my projects and various applications I've built</p>\r\n        </div>\r\n        <Projects />\r\n      </Container>\r\n    </Animated>\r\n  </>\r\n);\r\n\r\nexport default Portfolio;\r\n","import { useEffect, useReducer } from \"react\";\r\nimport config from \"../config\";\r\n\r\nexport const useCachedFetch = (url, useCache = true) => {\r\n  const expiry = useCache ? config.CACHE_EXPIRY_HOURS * 60 * 60 : 0;\r\n\r\n  const initialState = {\r\n    loading: true,\r\n    error: null,\r\n    data: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"FETCH_SUCCESS\":\r\n        return { ...initialState, loading: false, data: action.payload };\r\n      case \"FETCH_ERROR\":\r\n        return { ...initialState, loading: false, error: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState);\r\n\r\n  useEffect(() => {\r\n    let cancelRequest = false;\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      let cached = localStorage.getItem(url);\r\n      let ts = localStorage.getItem(url + \":ts\");\r\n\r\n      if (!!cached && !!ts && (Date.now() - ts) / 1000 < expiry) {\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: JSON.parse(cached) });\r\n      } else {\r\n        localStorage.removeItem(url);\r\n        localStorage.removeItem(url + \":ts\");\r\n        try {\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n          localStorage.setItem(url, JSON.stringify(data));\r\n          localStorage.setItem(url + \":ts\", Date.now());\r\n          if (cancelRequest) return;\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: data });\r\n        } catch (error) {\r\n          if (cancelRequest) return;\r\n          dispatch({ type: \"FETCH_ERROR\", payload: error.message });\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return function cleanup() {\r\n      cancelRequest = true;\r\n    };\r\n  }, [expiry, url]);\r\n\r\n  return state;\r\n};\r\n"],"sourceRoot":""}